name: Primary

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  deploy:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.1.7

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Set Variables
        run: |
          echo "STACK_NAME=openbrighton-main-web-scraper" >> $GITHUB_ENV
          echo "TEMPLATE=./infra/template.yml" >> $GITHUB_ENV
          echo "SOURCE_BUCKET_NAME=openbrighton-main-web-scraper-source" >> $GITHUB_ENV
          echo "GIT_HASH=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
      - name: Create S3 bucket (idempotent)
        run: |
          aws s3api create-bucket --bucket "$SOURCE_BUCKET_NAME" --region "$AWS_REGION" 2>&1 | grep -v 'BucketAlreadyOwnedByYou'

      - name: Zip Lambda handler
        run: zip bootstrap-$GIT_HASH.zip main.py
      - name: Upload to S3
        run: |
          aws s3 cp bootstrap-$GIT_HASH.zip s3://$SOURCE_BUCKET_NAME/
      - name: Validate CloudFormation template
        run: aws cloudformation validate-template --template-body file://$TEMPLATE

      - name: Deploy CloudFormation stack
        run: |
          aws cloudformation deploy \
            --template-file $TEMPLATE \
            --stack-name $STACK_NAME \
            --capabilities CAPABILITY_IAM CAPABILITY_NAMED_IAM \
            --parameter-overrides LambdaS3Bucket=$SOURCE_BUCKET_NAME LambdaS3Key=bootstrap-$GIT_HASH.zip
